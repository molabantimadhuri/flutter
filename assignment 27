Render given images if the index is odd then display the first image and if even then display the second image and also display the index number above the image in the left corner. and the max count should be 20. What will be your approach to solving this problem statement?

Image1: https://i.picsum.photos/id/9/250/250.jpg?hmac=tqDH5wEWHDN76mBIWEPzg1in6egMl49qZeguSaH9_VI

Image2: https://images.pexels.com/photos/213780/pexels-photo-213780.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500

Hint 1:- Use listview.builder or gridview

Hint 2:- Add logic to find the odd and even number

Hint 3:- Add network.image widget for rendering the internet image in UI
Source Code:
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Odd-Even Image List',
      home: ImageListScreen(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class ImageListScreen extends StatelessWidget {
  // Hint 3: Image URLs from the problem statement
  final String image1 =
      'https://i.picsum.photos/id/9/250/250.jpg?hmac=tqDH5wEWHDN76mBIWEPzg1in6egMl49qZeguSaH9_VI';
  final String image2 =
      'https://images.pexels.com/photos/213780/pexels-photo-213780.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Odd & Even Image Display'),
        backgroundColor: Colors.blueGrey,
      ),
      // Hint 1: Use GridView.builder or ListView.builder
      body: GridView.builder(
        itemCount: 20, // Max count = 20
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2, // 2 images per row
          crossAxisSpacing: 10,
          mainAxisSpacing: 10,
        ),
        padding: const EdgeInsets.all(10),
        itemBuilder: (context, index) {
          // Hint 2: Logic for odd/even
          bool isEven = index % 2 == 0;
          String imageUrl = isEven ? image2 : image1;

          return Stack(
            children: [
              // Display image from the internet
              Positioned.fill(
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(10),
                  child: Image.network(
                    imageUrl,
                    fit: BoxFit.cover,
                  ),
                ),
              ),

              // Display index number at top-left
              Positioned(
                top: 8,
                left: 8,
                child: Container(
                  padding: EdgeInsets.all(4),
                  color: Colors.black54,
                  child: Text(
                    'Index: $index',
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 14,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ),
            ],
          );
        },
      ),
    );
  }
}
