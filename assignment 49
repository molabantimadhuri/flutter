Question 16: Develop a Flutter application that includes a TextFormField for user input. The data entered into the TextFormField should be persistently stored in local storage.
When the user reopens the app, the previously entered text should be displayed in the TextFormField. 
SOURCE CODE:
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Persistent Text Storage',
      home: PersistentTextField(),
    );
  }
}

class PersistentTextField extends StatefulWidget {
  @override
  _PersistentTextFieldState createState() => _PersistentTextFieldState();
}

class _PersistentTextFieldState extends State<PersistentTextField> {
  final TextEditingController _controller = TextEditingController();
  final String _key = 'savedText'; // Key for local storage

  @override
  void initState() {
    super.initState();
    _loadSavedText(); // Load data when app opens
  }

  // Function to load saved data
  Future<void> _loadSavedText() async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      _controller.text = prefs.getString(_key) ?? '';
    });
  }

  // Function to save data
  Future<void> _saveText(String value) async {
    final prefs = await SharedPreferences.getInstance();
    prefs.setString(_key, value);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Persistent TextFormField')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: TextFormField(
          controller: _controller,
          decoration: InputDecoration(
            labelText: 'Enter text to save',
            border: OutlineInputBorder(),
          ),
          onChanged: (value) {
            _saveText(value); // Save as user types
          },
        ),
      ),
    );
  }
}
